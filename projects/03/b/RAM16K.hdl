// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(
		in=load,
		sel=address[0..1], 
		a=loada,
		b=loadb,
		c=loadc,
		d=loadd
	); 
	
    RAM4K(in=in, load=loada, address=address[2..13], out=rega); 
    RAM4K(in=in, load=loadb, address=address[2..13], out=regb); 
    RAM4K(in=in, load=loadc, address=address[2..13], out=regc); 
    RAM4K(in=in, load=loadd, address=address[2..13], out=regd);  
	
	Mux4Way16(
		sel=address[0..1],
		a=rega,
		b=regb,
		c=regc,
		d=regd,
		out=out
	);
}